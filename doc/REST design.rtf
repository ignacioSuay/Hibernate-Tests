Rest best practices

Versioning -> add the version in the uri, also without the version default to the newest. \
add a count -> eg. /v1/books/count so the client could now how many books are.\
for specific variations or for getting partial information use query parameters. Eg for sorting or for getting a few fields. \

Response codes

2xx -> means success\
200 Ok -> all great and adds content\
201 Created-> created ok and add the \'93location\'94 with the uri\
204 No content -> all ok and no content.\
202 Accepted -> Has been accepted and later will send you the result. Could also add the location for following the resource. \

3xx redirection -> redirection the \
\
4xx -> client errors\
401Unauthorized\
404 not found\
406 not acceptable\
415 unsupported\
\
5xx-> server errors\
500 internal server error\
503 service unavailable\
\
Validation\
You can add the @Valid annotation next to the parameters to make sure the object respects the validation in the Pojo.\
\
Caching\
There are 4 options:
Using expires in the header: the client won't try to ask again until the expired date has finish
using Cachecontrol manage: as expires but instead of a date use the number of seconds.

last modified: Send the last modified date. So now the client will ask again for a resource and the last time it was changed and if it was not changed the server will say so. \
eTag: similar to the one before, but with a custom tag instead of a date.

}