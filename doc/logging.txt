Logging
==========

The Simple Logging Facade for Java (SLF4J) serves as a simple facade or abstraction for various logging frameworks (e.g. java.util.logging, logback, log4j) allowing the end user to plug in the desired logging framework at deployment time.

Logback is a successor of log4j, it is faster and simpler.

Java.util.logging (JUL) is the slowest one.

Log levels: ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF.

The logger context is the name of the logger which usually is package.class. This way we can arrange loggers as a tree and define the levels for a specific package. e.g. <logger name="javax.activation" level="WARN"/>

Appender: is an output destination, could be a file, a server or a database, JMS.

layout: format of the output of the log.



Configuration
==============

the very basic structure of the configuration file can be described as:
 <configuration> element:
    containing zero or more <appender> elements,
    followed by zero or more <logger> elements,
    followed by at most one <root> element


Configuration tag
------------------
<configuration scan="true"> -> the scan= true, will make to scan for changes in the logback.xml file every minute and update the configuration.
You can change the time of scanning by adding scanPeriod. <configuration scan="true" scanPeriod="30 seconds" >

Root tag
----------
<root level="@logback.loglevel@">
        <appender-ref ref="CONSOLE"/>
</root>

The root will define the level for the root context, buy default the root level is set to Debug.

Appenders
-----------



